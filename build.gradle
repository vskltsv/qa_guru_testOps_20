
plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
}

group 'guru_qa'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    allureVersion = '2.22.0'
    junitVersion = '5.9.3'
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation('com.codeborne:selenide:6.17.2')
    testImplementation("io.qameta.allure:allure-selenide:${allureVersion}")
    testImplementation('com.github.javafaker:javafaker:1.0.2')
    testImplementation('org.slf4j:slf4j-simple:2.0.7')
    testImplementation ('org.aspectj:aspectjrt:1.9.7')
    testImplementation ('org.aspectj:aspectjweaver:1.9.7')
    testImplementation('org.aeonbits.owner:owner:1.0.12')
    testImplementation("org.junit.jupiter:junit-jupiter:${junitVersion}")
    testRuntimeOnly ("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}


allure {
    version = "${allureVersion}"

    useJUnit5 {
        version = "${allureVersion}"
    }
    report {
        version.set("2.22.0")
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set("2.22.0") //версия интеграции фреймворка и Allure
            }
        }
    }
}

test {
    useJUnitPlatform()
}

tasks.withType(Test) {
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task remote_test(type: Test) {
    useJUnitPlatform{
        includeTags("remote")
    }
}

